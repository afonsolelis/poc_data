input {
  rabbitmq {
    host => "rabbitmq"
    port => 5672
    queue => "myqueue"
    user => "guest"
    password => "guest"
    durable => true
  }
}

filter {
  # Primeiro, use um filtro ruby para definir "data_value" com base em "message".
  # Se "message" estiver vazio, use o campo [event][original].
  ruby {
    code => '
      m = event.get("message")
      if m.nil? || m.to_s.strip == ""
        m = event.get("[event][original]")
      end
      if m.nil? || m.to_s.strip == ""
        event.set("data_value", "NO_MESSAGE")
      else
        event.set("data_value", m.to_s)
      end
    '
  }
  
  # Adiciona o timestamp de ingestÃ£o (Unix time)
  ruby {
    code => 'event.set("data_ingestion", event.get("@timestamp").to_i)'
  }
  
  # Adiciona o campo data_tag fixo e remove campos desnecessÃ¡rios
  mutate {
    add_field => { "data_tag" => "rabbit" }
    remove_field => ["@version", "host", "path", "tags", "input", "agent", "message"]
  }
}

output {
  http {
    http_method  => "post"
    url          => "http://clickhouse:8123/?user=default&password=minhaSenha&query=INSERT%20INTO%20logs%20FORMAT%20JSONEachRow"
    format       => "json"
    content_type => "application/json"
  }
  stdout {
    codec => rubydebug
  }
}
